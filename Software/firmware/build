#! /bin/bash

# Build Phi firmware but check some stuff first

echo
echo '****************'
echo '*  Build Phi   *'
echo '****************'
echo

# get hostname to use as part of directory names
HOST_NAME=`uname -n`

# temporary directory for cmake files so they don't
# end up all mixed up with the source.

TMP_DIR="cmake.tmp.$HOSTNAME"

#
# process arguments
#

DEBUG_MODE=false

for var in "$@"
do
  if [[ $var == debug ]] ; then
    DEBUG_MODE=true
    TMP_DIR="$TMP_DIR.dbg"
  elif [[ $var == clean ]] ; then
    echo "### cleaning target ###"
    cd $TMP_DIR
    make clean
    echo done.
    exit 0
  elif [[ $var == clean_cmake ]] ; then
    echo "## cleaning cmake cache ##"
    rm -rf $TMP_DIR
    echo done.
    exit 0
  else
    echo "### Invalid argument \"$var\" ###"
    exit 1
  fi
done

if [[ $DEBUG_MODE == true ]] ; then
        echo 'Selecting *** DEBUG *** mode'
        BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"
        BIN_DIR="bin-debug"
else
        echo Selecting RELEASE mode
        BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
        BIN_DIR="bin"
fi

TARGET_FN=$BIN_DIR/phi-$HOST_NAME

# create TMP_DIR if it doesn't exist

if [ ! -e $TMP_DIR ] ; then
  echo "Creating directory for cmake tmp files : $TMP_DIR"
  mkdir $TMP_DIR
else
  echo "Reusing cmake tmp dir : $TMP_DIR"
fi

#
# check build environment
#

echo Checking build environment ...

# check that we have new version of pthread

PTHREAD_IMPL=`getconf GNU_LIBPTHREAD_VERSION`

if grep -q NPTL <<EOF
$PTHREAD_IMPL
EOF
then
  echo ' OK ' : PThread version is $PTHREAD_IMPL
else
  echo 'FAIL' : PThread version obsolete - version is $PTHREAD_IMPL
exit
fi

# OK ... everything looks good
echo ' OK ' : All tests complete
echo

# create makefiles with CMake
#
# Note: switch to tmp dir and build parent which
#       is a way of making cmake tmp files stay
#       out of the way.
#
# Note2: to clean up cmake files, it is OK to
#        "rm -rf" the tmp dirs


echo
echo Creating Makefiles with cmake ...

cd $TMP_DIR

cmake $BUILD_TYPE ..

# run makefile (in tmp dir)

echo
echo Starting build ...

make

# if successful ... copy executable to bin dir

if [ $? == 0 ] ; then
    echo "SUCCESS - copying PHI to ./$TARGET_FN"
    cp ./src/phi "../$TARGET_FN"
else
    echo BUILD FAILED
    exit
fi

# done

echo 
echo Done.
echo

exit

